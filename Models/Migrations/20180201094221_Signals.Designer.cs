// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Models;
using System;

namespace Models.Migrations
{
    [DbContext(typeof(AnalyzerContext))]
    [Migration("20180201094221_Signals")]
    partial class Signals
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Signal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Average")
                        .HasColumnType("numeric(30,28)");

                    b.Property<int>("Interval");

                    b.Property<string>("MarketName");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(30,28)");

                    b.Property<decimal?>("Ratio")
                        .HasColumnType("numeric(30,28)");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.ToTable("Signals");
                });

            modelBuilder.Entity("Models.SignalResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(30,28)");

                    b.Property<int>("SignalId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SignalId");

                    b.ToTable("SignalResults");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<long>("ChatId");

                    b.Property<bool>("IsSubscribed");

                    b.HasKey("ChatId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.SignalResult", b =>
                {
                    b.HasOne("Models.Signal", "Signal")
                        .WithMany("SignalResults")
                        .HasForeignKey("SignalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
